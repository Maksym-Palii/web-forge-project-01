{"mappings":"AACW,IAAPA,MAAQC,SAASC,cAAc,cAGjB,SAATC,QAAQC,GAIiBA,EAA1BC,SAA0BD,EAAMC,QAEtBC,KAAKC,eAEL,GACdH,EAAMI,iBAGmB,IAAvBC,EAAW,sBACbC,EAAI,EAE2BC,EAAhBF,EAASG,QAAO,MAAQ,IACvCC,EAAYP,KAAKQ,MAAMF,QAAO,MAAQ,IACtCG,EAAeN,EAASG,QAAO,UAAW,SAAAI,GACxC,OAAON,EAAIG,EAAUI,OACjBJ,EAAUK,OAAOR,MAAQC,EAAaO,OAAOR,GAC7CM,C,KAIC,IADqBN,EAA1BK,EAAaI,QAAQ,QAEvBT,EAAI,IAAMA,EAAI,GACdK,EAAeA,EAAaK,MAAM,EAAGV,IAGH,IAAhCW,EAAMZ,EACPa,OAAO,EAAGhB,KAAKQ,MAAMG,QACrBL,QAAO,OAAQ,SAAUI,GACxB,MAAO,SAAWA,EAAEC,OAAS,G,IAE9BL,QAAO,SAAW,UACrBS,EAAM,IAAIE,OAAO,IAAMF,EAAM,MAGtBG,KAAKlB,KAAKQ,QACfR,KAAKQ,MAAMG,OAAS,EAGpBX,KAAKQ,MAAQC,EACW,SAAfX,EAAMqB,MAAmBnB,KAAKQ,MAAMG,OAAS,IACtDX,KAAKQ,MAAQ,IAI0Dd,MAAnE0B,kBAAkB1B,MAAMc,MAAMG,OAAQjB,MAAMc,MAAMG,O,CAI1DjB,MAAM2B,iBAAiB,QAASxB,SAAS,GACzCH,MAAM2B,iBAAiB,QAASxB,SAAS,GACzCH,MAAM2B,iBAAiB,OAAQxB,SAAS,GACxCH,MAAM2B,iBAAiB,UAAWxB,SAAS","sources":["src/js/phoneinput.js"],"sourcesContent":["//Задаем инпут\nlet input = document.querySelector('.tel-field');\n\n//Функция маски инпута\nfunction setMask(event) {\n  //Задаем в переменную нажатую клавишу\n  let pressedKey;\n  //Условие, проверяющее нажатую клавишу\n  event.keyCode && pressedKey === event.keyCode;\n  //Задаем в переменную позицию в инпуте, с которой будет доступен ввод цифр\n  let numberPos = this.selectionStart;\n  //Устанавливаем возможность ввода цифр с третьей позиции\n  if (numberPos < 3) {\n    event.preventDefault();\n  }\n  //Задаем внешний вид маски инпута\n  let maskType = '+38 (___) ___-__-__',\n    i = 0,\n    //Проверка и замена value инпута по буквенно\n    replaceValue = maskType.replace(/\\D/g, ''),\n    prevValue = this.value.replace(/\\D/g, ''),\n    currentValue = maskType.replace(/[_\\d]/g, a => {\n      return i < prevValue.length\n        ? prevValue.charAt(i++) || replaceValue.charAt(i)\n        : a;\n    });\n  //Защита от стирания первых двух цифр (+7)\n  i = currentValue.indexOf('_');\n  if (i != -1) {\n    i < 5 && (i = 3);\n    currentValue = currentValue.slice(0, i);\n  }\n  //Регулярное выражение для проверки value инпута\n  let reg = maskType\n    .substr(0, this.value.length)\n    .replace(/_+/g, function (a) {\n      return '\\\\d{1,' + a.length + '}';\n    })\n    .replace(/[+()]/g, '\\\\$&');\n  reg = new RegExp('^' + reg + '$');\n  //Проверка содержимого инпута на регулярное выражение, длинну и нажимаемые клавиши\n  if (\n    !reg.test(this.value) ||\n    this.value.length < 5 ||\n    (pressedKey > 47 && pressedKey < 58)\n  ) {\n    this.value = currentValue;\n  } else if (event.type === 'blur' && this.value.length < 5) {\n    this.value = '';\n  }\n\n  // Устанавливаем курсор в конец строки в инпуте, если при нажатии кнопки он стоит не в конце\n  input.setSelectionRange(input.value.length, input.value.length);\n}\n\n//Запуск функции setMask через обработчик событий\ninput.addEventListener('input', setMask, false);\ninput.addEventListener('focus', setMask, false);\ninput.addEventListener('blur', setMask, false);\ninput.addEventListener('keydown', setMask, false);\n"],"names":["input","document","querySelector","setMask","event","keyCode","this","selectionStart","preventDefault","maskType","i","replaceValue","replace","prevValue","value","currentValue","a","length","charAt","indexOf","slice","reg","substr","RegExp","test","type","setSelectionRange","addEventListener"],"version":3,"file":"index.67695733.js.map"}